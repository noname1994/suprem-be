swagger: "2.0"
info:
  description: "API Application"
  version: 1.0.0
  title: Swagger API Application
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: localhost:8080
basePath: /api/v1
tags:
  - name: Storage
    description:  Operations about Storage
  - name: Employee
    description: Operations about Employee
securityDefinitions:
  jwt:
    description: OpenStack Keystone Authentication
    type: apiKey
    in: header
    name: authorization
schemes:
  - http
paths:
  /employee:
    put:
      tags:
        - Employee
      summary: update a employee
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: employee object that needs to be updated
          required: true
          schema:
            $ref:  "#/definitions/EmployeeModel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /employee/password:
    put:
      tags:
        - Employee
      summary: Update password
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: new password need to updated
          required: true
          schema:
            properties:
              newPassword:
                type: string
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
  /login:
    post:
      tags:
        - Auth
      summary: Login into system
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: username and password need to login
          required: true
          schema:
            $ref:  "#/definitions/LoginModel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"    
  /logout:
    get:
      tags:
        - Auth
      summary: logout system
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"      
  /admin/employee:
    post:
      tags:
        - Admin
      summary: Create employee into system
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Employee object
          required: true
          schema:
            $ref:  "#/definitions/EmployeeModel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
    delete:
      tags:
        - Admin
      summary: delete array list employee
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: arrId
          type: array
          items:
            type: string
          description: array id (maximum 20)
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - Admin
      summary: get employee
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: _id
          type: string
          description: id (exactly)
          required: false
        - in: query
          name: gen
          type: string
          description: gen (exactly)
          required: false
        - in: query
          name: fullname
          type: string
          description: fullname (like)
          required: false
        - in: query
          name: email
          type: string
          description: email (like)
          required: false
        - in: query
          name: username
          type: string
          description: username (like)
          required: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Admin
      summary: Update work place of employee
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: work place object need to created
          required: true
          schema:
            $ref:  "#/definitions/RoleSalaryModel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
  /admin/role:
    get:
      tags:
        - Admin
      summary: get all roles
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /file:
    post:
      tags:
        - File
      summary: Upload file to server
      security: 
        - jwt: []
      description: ""
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: formData
          name: type
          description: file to upload (Put at top of files)
          required: true
          type: string
          enum:
            - AVATAR
            - IMAGE_PRODUCT
            - DOCUMENT
            - OTHER
          default: IMAGE_PRODUCT
        - in: formData
          name: file
          description: file to upload
          required: true
          type: file
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
    get:
      tags:
        - File
      summary: download file from server
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: path
          type: string
          description: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
  /vn-location/province:
    get:
      tags:
        - VN-Location
      summary: get all province
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"  
  /vn-location/district:
    get:
      tags:
        - VN-Location
      summary: get all district by province id
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: provinceId
          type: string
          description: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /vn-location/ward:
    get:
      tags:
        - VN-Location
      summary: get all ward by district id
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: districtId
          type: string
          description: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"    
  /promotion:
    post:
      tags:
        - Promotion
      summary: Create promotion
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Promotion object
          required: true
          schema:
            $ref:  "#/definitions/PromotionModel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
    delete:
      tags:
        - Promotion
      summary: delete array list promotion
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: arrId
          type: array
          items:
            type: string
          description: array id (maximum 20)
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - Promotion
      summary: get promotion
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: type
          type: string
          enum:
            - PERCENT
            - GIFT
          description: PERCENT || GIFT 
          required: false
        - in: query
          name: pageNum
          type: number
          description: page number
          default: 0
          required: false
        - in: query
          name: pageSize
          type: number
          description: page size
          default: 100
          required: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Promotion
      summary: Update promotion
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: promotion object need to created
          required: true
          schema:
            $ref:  "#/definitions/PromotionModel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
  /promotion/{_id}:
    get:
      tags:
        - Promotion
      summary: get promotion by id
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: _id
          type: string
          description: _id of promotion
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /product:
    post:
      tags:
        - Product
      summary: Create product
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: product object
          required: true
          schema:
            $ref:  "#/definitions/ProductModel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
    delete:
      tags:
        - Product
      summary: delete array list product
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: arrId
          type: array
          items:
            type: string
          description: array id (maximum 20)
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - Product
      summary: get product
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: type
          type: string
          enum:
            - PERCENT
            - GIFT
          description: PERCENT || GIFT 
          required: false
        - in: query
          name: pageNum
          type: number
          description: page number
          default: 0
          required: false
        - in: query
          name: pageSize
          type: number
          description: page size
          default: 100
          required: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Product
      summary: Update product
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: product object need to created
          required: true
          schema:
            $ref:  "#/definitions/ProductModel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
  /product/{_id}:
    get:
      tags:
        - Product
      summary: get product by id
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: _id
          type: string
          description: id of product
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /category:
    post:
      tags:
        - Category
      summary: Create category
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: category object
          required: true
          schema:
            $ref:  "#/definitions/CategoryModel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
    delete:
      tags:
        - Category
      summary: delete array list category
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: arrId
          type: array
          items:
            type: string
          description: array id (maximum 20)
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
        - Category
      summary: get category
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: query
          name: status
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
          description: ACTIVE || INACTIVE || DELETED
          required: false
        - in: query
          name: pageNum
          type: number
          description: page number
          default: 0
          required: false
        - in: query
          name: pageSize
          type: number
          description: page size
          default: 100
          required: false
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      tags:
        - Category
      summary: Update category
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: category object need to created
          required: true
          schema:
            $ref:  "#/definitions/CategoryModel"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
  /category/{_id}:
    get:
      tags:
        - Category
      summary: get category by id
      security: 
        - jwt: []
      description: ""
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: _id
          type: string
          description: id of category
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/SuccessResponse"
        "400":
          description: Client Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"
definitions:
  SuccessResponse:
    properties:
      code:
       type: number
      message:
        type: string
      value:
        type: object
  ErrorResponse:
    properties:
      code: 
        type: number
      message: 
        type: string
      error:
        type: object 
  EmployeeModel:
    properties: 
      _id:
        type: string
        example: 5b2b1b7db7945e2ff4d68116
      fullname: 
        type: string
        example: Trần Đức Ninh
      gen: 
        type: string
        example: 163313968
      email:
        type: string
        example: tranducninhnd94@hotmail.com
      address: 
        $ref: "#/definitions/VNLocationModel"    
      username:
        type: string
        example: tranducninh
      password: 
        type: string
        example: abc13579
      facebookPage: 
        type: array
        items:
          properties:
            url: 
              type: string 
        example:
          - url: https://facebook.com.vn/tranducninhnd94
          - url: https://facebook.com.vn/tranducninhnd95
      phoneNumber:
        type: array
        items: 
          properties:
            number:
              type: string
        example: 
          - number: 0166-97-09094
          - number: 0166-97-09095
      avatar: 
        type: string
        example: http://localhost:8080/images/avater/default.jpg
      roles:
        type: array
        items:
          properties:
            name:
              type: string
            permission:
              type: array
              items:
                type: string
        example:
          - name: Employee
            permission:
              - permission 1
              - permission 2
      salary:
        properties:
          baseSalary: 
            type: number
          positionSalary:
            type: number
          allowanceSalary:
            type: number
        example:
          salary:
            baseSalary: 2000000
            positionSalary: 0
            allowanceSalary: 0
      monthlySalary:
        type: array
        items:
          properties:
            status: 
              type: string
              enum: 
                - RECEIVED
                - NOT_RECEIVED
            dateReceived:
              type: string
              format: date-time
            baseSalary: 
              type: number
            positionSalary:
              type: number
            allowanceSalary:
              type: number
            promotionSalary:
              type: number
        example:
          monthlySalary:
            - status: NOT_RECEIVED
              dateReceived: 2018-06-28T06:29:06.984Z
              baseSalary: 2000000
              positionSalary: 0
              allowanceSalary: 0
              promotionSalary: 0
            - status: RECEIVED
              dateReceived: 2018-05-28T06:29:06.984Z
              baseSalary: 2000000
              positionSalary: 0
              allowanceSalary: 0
              promotionSalary: 0
      dateWorking: 
        type: string
        format: date
        example: 2017-07-21 
      status:
        type: string
        enum:
          - ACTIVE
          - INACTIVE
          - DELETED
        default: ACTIVE
      latestAcess: 
        type: string
        format: date-time
      createdAt: 
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  StorageModel:
    properties: 
      _id:
        type: string
        example: 5b2b1b7db7945e2ff4d68116
      name: 
        type: string
        example: storage 1
      address: 
        $ref: "#/definitions/VNLocationModel"    
      phoneNumber:
        type: array
        items: 
          properties:
            number:
              type: string
        example: 
          - number: 0166-97-09094
      status:
        type: string
        enum:
          - INACTIVE
          - ACTIVE
          - DELETED
        default: ACTIVE    
      owner:
        type: string
        example: 5b2b1b7db7945e2ff4d68116
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  LoginModel:
    properties:
      username:
        type: string
      password:
        type: string
    example: 
      username: tranducninh
      password: abc13579
  FileUploadModel:
    properties:
      path:
        type: string
      size:
        type: string
      mimetype:
        type: string
      originalname:
        type: string
      encoding:
        type: string
      filename:
        type: string
      createdAt:
        type: date
        format: date-time
  VNLocationModel:
    properties:
      detail:
        type: string
      ward: 
        properties:
          _id: 
            type: string
          name:
            type: string
          type:
            type: string
          location: 
            type: string
      district: 
        properties:
          _id:
            type: string
          name:
            type: string
          type: 
            type: string
          location:
            type: string
      province: 
        properties:
          _id:
            type: string
          name: 
            type: string
          type:
            type: string
    example:
      detail: Số 1, Phạm Văn Bạch
      ward:
        _id: 00010
        name: Nguyễn Trung Trực
        type: Phường
        location: 21 02 36N, 105 50 43E
      district:
        _id: 001
        name: Ba Đình
        type: Quận
        location: 21 02 08N, 105 49 38E
      province:
        _id: 01
        name: Hà Nội
        type: Thành Phố
  RoleSalaryModel: 
    properties:
      _id:
        type: string
      roles:
        type: array
        items:
          type: string
      salary:
        type: object
        properties:
          baseSalary:
            type: string
          positionSalary:
            type: string
          allowanceSalary:
            type: string
    example:
      _id: 5b471769664b561368679a02
      roles:
        - 5b471769664b561368679a02
        - 5b471769664b561368679a02
      salary:
        baseSalary: 4000000
        positionSalary: 0
        allowanceSalary: 0
  RoleModel:
    properties:
      id:
        type: string
      permission:
        type: array
        items:
          type: string
  PromotionModel:
    properties:
      _id:
        type: string
      name:
        type: string
      type:
        type: string
      percentFormula:
        properties:
          purchasedQuantity:
            type: number
            default: 1
          reducedPercent:
            type: number
            default: 0
      giftFormula:
        properties:
          purchasedQuantity:
            type: number
            default: 0
          donatedQuantity:
            type: number
            default: 0
          donatedProduct:
            type: string
      description:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
  ProductModel:
    properties:
      _id:
        type: string
      name:
        type: string
      category:
        type: string
        enum:
          - Category 1
          - Category 2
      tag:
        type: string
        enum:
          - Tag 1
          - Tag 2
      originalPrice:
        type: number
      salePrice:
        type: number
      status:
        type: string
        enum:
          - AVAILABLE
          - UNAVAIABLE
          - DISABLE
          - DELETED
      colorImage:
        type: array
        items:
          properties:
            _id:
              type: string
            color:
              type: string
            image:
              type: array
              items:
                properties:
                  url:
                    type: string
            priority:
              type: number
      promotion:
        type: array
        items: 
          properties:
            information:
              type: string
            startedDate:
              type: string
              format: date
              example: 2017-07-21 
            endedDate:
              type: string
              format: date
              example: 2017-07-21 
      description: 
        type: string
  CategoryModel:
    properties:
      _id:
        type: string
      name: 
        type: string
      status:
        type: string
        enum:
          - ACTIVE
          - INACTIVE
          - DELETED
      description:
        type: string
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time